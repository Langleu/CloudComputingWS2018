1. aws configure 

# creates a local ssh key with 4096 bit
2. ssh-keygen -t rsa -b 4096 -C “email” -f ~/.ssh/cc-key

# upload a public ssh key to amazon for usage in vm creation
3. aws ec2 import-key-pair --key-name "admin" --public-key-material file://~/.ssh/cc-key.pub

# creates a security group with a description
4. aws ec2 create-security-group —group-name $GROUPNAME —description “Security Group for CC”

# icmp security rule with allowance from any ip
aws ec2 authorize-security-group-ingress --group-id $GROUPID --ip-permissions IpProtocol=icmp,FromPort=-1,ToPort=-1,IpRanges=[{CidrIp=0.0.0.0/0}]

# ssh security rule with allowance from any ip
aws ec2 authorize-security-group-ingress --group-id $GROUPID --protocol tcp --port 22 --cidr 0.0.0.0/0

5.
# creates a vpc with specific cidr block
aws ec2 create-vpc --cidr-block 10.0.0.0/24 --amazon-provided-ipv6-cidr-block

# creates a subnet in the vpc with specific cidr block
aws ec2 create-subnet --availability-zone eu-central-1 --vpc-id $VPCID  --cidr-block 10.0.0.0/24 --ipv6-cidr-block 2001:db8:1234:a100::/64

# Creates a vm in Frankfurt with 2 vCPU and 4 GB RAM and Ubuntu
6. aws ec2 run-instances --image-id ami-0f6dbb30997cea460 --count 1 --instance-type t3.medium --security-group-ids $SECURITYID --subnet-id $SID --key-name admin

7. ping $IP

8. ssh $IP

# stop the instance
9. aws ec2 stop-instances --instance-ids $VMID