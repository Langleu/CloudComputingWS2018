1. aws configure 

# creates a local ssh key with 4096 bit
2. ssh-keygen -t rsa -b 4096 -C "email" -f ~/.ssh/cc-key

# upload a public ssh key to amazon for usage in vm creation
3. aws ec2 import-key-pair --key-name "admin" --public-key-material file://~/.ssh/cc-key.pub

5.
# creates a vpc with specific cidr block
aws ec2 create-vpc --cidr-block 10.0.0.0/24 --amazon-provided-ipv6-cidr-block

# creates a subnet in the vpc with specific cidr block
aws ec2 create-subnet --availability-zone us-east-1b --vpc-id $VPCID --cidr-block 10.0.0.0/24

# create Internet gateway
aws ec2 create-internet-gateway

# attach vpc to internet gateway
aws ec2 attach-internet-gateway --vpc-id $VPCID --internet-gateway-id $GATEWAYID --region us-east-1

# IMPORTANT: even though step 4 in the assignment, it needs the vpc id so it has to be afterwards
# creates a security group with a description
4. aws ec2 create-security-group --group-name $GROUPNAME --description "Security Group for CC" --vpc-id $VPCID

# icmp security rule with allowance from any ip
aws ec2 authorize-security-group-ingress --group-id $GROUPID --ip-permissions IpProtocol=icmp,FromPort=-1,ToPort=-1,IpRanges='[{CidrIp=0.0.0.0/0}]'

# ssh security rule with allowance from any ip
aws ec2 authorize-security-group-ingress --group-id $GROUPID --protocol tcp --port 22 --cidr 0.0.0.0/0
# aws ec2 authorize-security-group-ingress --group-id $GROUPID --ip-permissions IpProtocol=tcp,FromPort=22,ToPort=22,IpRanges="[{CidrIp=0.0.0.0/0}]"

# Creates a vm in North Virginia (aws starter restrictions) with 2 vCPU and 4 GB RAM and Ubuntu
6. aws ec2 run-instances --image-id ami-0f9351b59be17920e --count 1 --instance-type t2.medium --security-group-ids $SECUREID --subnet-id $SUBNET --key-name admin --associate-public-ip-address

# get public ip for instance
6.1. aws ec2 decsribe-instances

7. ping $IP

8. ssh -i ~/.ssh/cc-key ubuntu@$IP

# stop the instance
9. aws ec2 stop-instances --instance-ids $VMID